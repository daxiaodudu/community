<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dxc.community.dao.QcommentsMapper">
  <resultMap id="BaseResultMap" type="com.dxc.community.pojo.Qcomments">
    <constructor>
      <idArg column="cid" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="parent_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="type" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="creator" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="gmt_create" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="gmt_modified" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="like_count" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="reply_count" javaType="java.lang.Long" jdbcType="BIGINT" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.dxc.community.pojo.Qcomments">
    <constructor>
      <idArg column="cid" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="parent_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="type" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="creator" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="gmt_create" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="gmt_modified" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="like_count" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="reply_count" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="content" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    cid, parent_id, type, creator, gmt_create, gmt_modified, like_count, reply_count
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.dxc.community.pojo.QcommentsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_qcomments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.dxc.community.pojo.QcommentsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_qcomments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_qcomments
    where cid = #{cid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_qcomments
    where cid = #{cid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.dxc.community.pojo.QcommentsExample">
    delete from t_qcomments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dxc.community.pojo.Qcomments">
    insert into t_qcomments (cid, parent_id, type, 
      creator, gmt_create, gmt_modified, 
      like_count, reply_count, content
      )
    values (#{cid,jdbcType=BIGINT}, #{parentId,jdbcType=BIGINT}, #{type,jdbcType=INTEGER}, 
      #{creator,jdbcType=INTEGER}, #{gmtCreate,jdbcType=BIGINT}, #{gmtModified,jdbcType=BIGINT}, 
      #{likeCount,jdbcType=BIGINT}, #{replyCount,jdbcType=BIGINT}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dxc.community.pojo.Qcomments">
    insert into t_qcomments
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cid != null">
        cid,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="likeCount != null">
        like_count,
      </if>
      <if test="replyCount != null">
        reply_count,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cid != null">
        #{cid,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=BIGINT},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=BIGINT},
      </if>
      <if test="likeCount != null">
        #{likeCount,jdbcType=BIGINT},
      </if>
      <if test="replyCount != null">
        #{replyCount,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dxc.community.pojo.QcommentsExample" resultType="java.lang.Long">
    select count(*) from t_qcomments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_qcomments
    <set>
      <if test="record.cid != null">
        cid = #{record.cid,jdbcType=BIGINT},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=BIGINT},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=INTEGER},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=BIGINT},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=BIGINT},
      </if>
      <if test="record.likeCount != null">
        like_count = #{record.likeCount,jdbcType=BIGINT},
      </if>
      <if test="record.replyCount != null">
        reply_count = #{record.replyCount,jdbcType=BIGINT},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update t_qcomments
    set cid = #{record.cid,jdbcType=BIGINT},
      parent_id = #{record.parentId,jdbcType=BIGINT},
      type = #{record.type,jdbcType=INTEGER},
      creator = #{record.creator,jdbcType=INTEGER},
      gmt_create = #{record.gmtCreate,jdbcType=BIGINT},
      gmt_modified = #{record.gmtModified,jdbcType=BIGINT},
      like_count = #{record.likeCount,jdbcType=BIGINT},
      reply_count = #{record.replyCount,jdbcType=BIGINT},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_qcomments
    set cid = #{record.cid,jdbcType=BIGINT},
      parent_id = #{record.parentId,jdbcType=BIGINT},
      type = #{record.type,jdbcType=INTEGER},
      creator = #{record.creator,jdbcType=INTEGER},
      gmt_create = #{record.gmtCreate,jdbcType=BIGINT},
      gmt_modified = #{record.gmtModified,jdbcType=BIGINT},
      like_count = #{record.likeCount,jdbcType=BIGINT},
      reply_count = #{record.replyCount,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dxc.community.pojo.Qcomments">
    update t_qcomments
    <set>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=BIGINT},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=BIGINT},
      </if>
      <if test="likeCount != null">
        like_count = #{likeCount,jdbcType=BIGINT},
      </if>
      <if test="replyCount != null">
        reply_count = #{replyCount,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where cid = #{cid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.dxc.community.pojo.Qcomments">
    update t_qcomments
    set parent_id = #{parentId,jdbcType=BIGINT},
      type = #{type,jdbcType=INTEGER},
      creator = #{creator,jdbcType=INTEGER},
      gmt_create = #{gmtCreate,jdbcType=BIGINT},
      gmt_modified = #{gmtModified,jdbcType=BIGINT},
      like_count = #{likeCount,jdbcType=BIGINT},
      reply_count = #{replyCount,jdbcType=BIGINT},
      content = #{content,jdbcType=LONGVARCHAR}
    where cid = #{cid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dxc.community.pojo.Qcomments">
    update t_qcomments
    set parent_id = #{parentId,jdbcType=BIGINT},
      type = #{type,jdbcType=INTEGER},
      creator = #{creator,jdbcType=INTEGER},
      gmt_create = #{gmtCreate,jdbcType=BIGINT},
      gmt_modified = #{gmtModified,jdbcType=BIGINT},
      like_count = #{likeCount,jdbcType=BIGINT},
      reply_count = #{replyCount,jdbcType=BIGINT}
    where cid = #{cid,jdbcType=BIGINT}
  </update>
</mapper>